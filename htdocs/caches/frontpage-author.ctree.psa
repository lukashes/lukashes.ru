a:5:{i:0;a:20:{s:5:"title";s:46:"Уведомление о новых письмах в&nbsp;Ubuntu 11.*";s:4:"text";s:502:"Нашел интересный и достаточно простой плагин для уведомления о новых письмах. Устанавливается очень просто, как и все программы в Убунте:<blockquote>sudo add-apt-repository ppa:mitya57/ppa<br />sudo apt-get update<br />sudo apt-get install unity-mail</blockquote>После чего ссылку нужно добавить в лаунчпад и осуществить соответствующую настройку. Выглядит это все довольно симпатично:<br /><br /><img src="http://lukashes/data/images/unity-mail.png" alt="http://lukashes/data/images/unity-mail.png" />";s:4:"time";a:2:{i:0;i:1321838975;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:13:"last-modified";a:2:{i:0;i:1321838935;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:7:"last-ip";s:13:"94.158.169.92";s:10:"published?";b:1;s:12:"commentable?";b:1;s:10:"favourite?";b:0;s:8:"visible?";b:1;s:4:"tags";a:0:{}s:14:"comments-count";i:0;s:17:"your-comment-href";s:37:"http://lukashes/2011/11/21/1/comment/";s:16:"commentable-now?";b:1;s:19:"can-be-commentable?";b:1;s:4:"href";s:29:"http://lukashes/2011/11/21/1/";s:14:"comments-link?";b:1;s:18:"new-comments-count";i:0;s:21:"favourite-toggle-href";s:40:"http://lukashes/2011/11/21/1/@favourite/";s:9:"edit-href";s:35:"http://lukashes/2011/11/21/1/@edit/";s:1:"_";a:4:{s:3:"_id";s:2:"12";s:6:"_title";s:41:"Уведомление о новых письмах в Ubuntu 11.*";s:4:"_ord";i:0;s:8:"_ord_max";i:4;}}i:1;a:20:{s:5:"title";s:31:"Установка&nbsp;Java от&nbsp;Sun";s:4:"text";s:363:"Для работы с Эклипсом необходимо использовать дистрибутив <i>Java</i> от <i>Sun</i>, который уже не хранится в стандартных репах <i>Ubuntu</i>. Для установки необходимо выполнить надоб команд:<blockquote>$ sudo add-apt-repository ppa:ferramroberto/java &amp;&amp; sudo apt-get update &amp;&amp; sudo apt-get install sun-java6-jdk</blockquote>Запускаем и радуемся.";s:4:"time";a:2:{i:0;i:1320763338;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:13:"last-modified";a:2:{i:0;i:1320763193;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:7:"last-ip";s:13:"194.177.14.16";s:10:"published?";b:1;s:12:"commentable?";b:1;s:10:"favourite?";b:0;s:8:"visible?";b:1;s:4:"tags";a:2:{i:0;a:3:{s:4:"name";s:7:"eclipse";s:4:"href";s:29:"http://lukashes/tags/eclipse/";s:8:"current?";b:0;}i:1;a:3:{s:4:"name";s:4:"java";s:4:"href";s:26:"http://lukashes/tags/java/";s:8:"current?";b:0;}}s:14:"comments-count";i:1;s:17:"your-comment-href";s:37:"http://lukashes/2011/11/08/1/comment/";s:16:"commentable-now?";b:1;s:19:"can-be-commentable?";b:1;s:4:"href";s:29:"http://lukashes/2011/11/08/1/";s:14:"comments-link?";b:1;s:18:"new-comments-count";i:0;s:21:"favourite-toggle-href";s:40:"http://lukashes/2011/11/08/1/@favourite/";s:9:"edit-href";s:35:"http://lukashes/2011/11/08/1/@edit/";s:1:"_";a:4:{s:3:"_id";s:2:"10";s:6:"_title";s:21:"Установка Java от Sun";s:4:"_ord";i:1;s:8:"_ord_max";i:4;}}i:2;a:20:{s:5:"title";s:28:"Начинаем работать с&nbsp;GIT";s:4:"text";s:4837:"Начал детальное изучение <i>git</i> по книге <a href="http://progit.org/book/ru/">pro git</a>. Статья будет постепенно дополняться разнообразными вкусностями о которых я буду узнавать. Базовые вещи, как фиксирование или добавление изменений тут рассматриваться не будут.<br /><br /><b>Базовая конфигурация</b><br /><br />Конфигурирование происходит с помощью утилиты <i>git config</i>. Есть несколько уровней глобальности настроек. <ul><li>Файл <i>/etc/gitconfig</i> содержит значения, общие для всех пользователей вашей системы и всех их репозиториев. Если вы указываете параметр <i><b>&mdash;system</b></i>, запуская <i>git config</i>, то параметры читаются и сохраняются в этот файл.</li><li>Файл <i>~/.gitconfig</i> хранит настройки конкретного пользователя. Этот файл используется при указании параметра <i><b>&mdash;global</b></i>.</li><li>Конфигурационный файл в каталоге <i>.git/config</i> в том репозитории, где вы находитесь в данный момент. Эти параметры &#8213; только для данного конкретного репозитория.</li></ul>Настройки на каждом уровне подменяют настройки из предыдущего, то есть значения в <i>.git/config</i> перекрывают соответствующие значения в <i>/etc/gitconfig</i>.<br /><br />Задание настроек происходит следующим образом:<blockquote>$ git config &mdash;global user.name &laquo;Yegor Lukash&raquo;<br />$ git config &mdash;global user.email yegor.lukash@gmail.com<br />$ git config &mdash;system color.branch auto<br />$ git config &mdash;system color.status auto<br />$ git config &mdash;system color.diff auto</blockquote>Чтобы посмотреть список настроек можно воспользоваться флагом <i><b>&mdash;list</b></i>. Результат:<blockquote>$ git config &mdash;list<br />user.name=Yegor Lukash<br />user.email=yegor.lukash@gmail.com<br />core.repositoryformatversion=0<br />core.filemode=true<br />core.bare=false<br />core.logallrefupdates=true<br />remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*<br />remote.origin.url=git://github.com/test/test.git<br />branch.master.remote=origin<br />branch.master.merge=refs/heads/master</blockquote>Для каждой команды можно ввести алиас, чтобы пользоваться короткой записью. Сделать это можно следующим образом:<blockquote>$ git config &mdash;global alias.co checkout<br />$ git config &mdash;global alias.br branch<br />$ git config &mdash;global alias.ci commit<br />$ git config &mdash;global alias.st status</blockquote>Фичу с алиасами можно использовать не только для сокращения имени команд, можно создавать новые команды на основе комбинаций других. Например, следующий пример позволяет удобно использовать одну команду <i>last</i> для получения информации о последнем коммите:<blockquote>$ git config &mdash;global alias.last &rsquo;log -1 HEAD&rsquo;</blockquote><b>Добавление файлов в игнор-лист</b><br /><br />Часто в процессе работы сайта происходят какие-то динамические изменения в файлах. Например запись в лог или генерирование кэша. В таком случае можно воспользоваться игнор-листом. Для этого необходимо создать файл &laquo;<i>.gitignore</i>&raquo; и внести в него правила. Вот пример такого файла:<blockquote>$ cat .gitignore<br />*.[oa]<br />!!*~</blockquote>Первая строка говорит о том что нужно проигнорировать все файлы, заканчивающиеся на .o и .a, а вторая скрывает от&nbsp;git временные файлы. Для фиксирования правил используются&nbsp;glob-шаблоны.<br /><br /><b>Работа с удаленными ветками</b><br /><br />Ну что же, сам <i>git</i> является дециентрализованной системой управления версиями. Это значит, что часто приходится работать с удаленными ветками. Для просмотра информации об удаленном репозитории можно воспользоваться командой remote <i>show</i>:<blockquote>$ git remote show origin</blockquote>Ответ будет содержать основную инфу по репозиторию и, что важно, об существующих ветках:<blockquote>remote origin<br /> Fetch URL: git://github.com/lukashes/test.git<br /> Push URL: git://github.com/lukashes/test.git<br /> HEAD branch: master<br /> Remote branches:<br /> dev tracked<br /> master tracked<br /> Local branch configured for &rsquo;git pull&rsquo;:<br /> master merges with remote master<br /> Local ref configured for &rsquo;git push&rsquo;:<br /> master pushes to&nbsp;master (up to&nbsp;date)</blockquote>Для удаления или переименования <b>репозиториев</b> можно воспользоваться утилитами <i>rm</i> и <i>rename</i> соответственно (<i>git remote rename old_name new_name</i>).<br /><br /><b>Ветвление</b><br /><br />Для работы с ветками используется команда <i>branch</i>, помимо создания/удаления веток она имеет еще несколько специфических возможностей. Например, флаг <i>-v</i> позволяет отобразить последний коммит для каждой из локальных веток:<blockquote>$ git branch -v<br />* develop 251dea6 Восстановление работоспособности тестов<br /> master f567df3 [behind 13] Merge branch &rsquo;master&rsquo;...</blockquote>";s:4:"time";a:2:{i:0;i:1320438108;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:13:"last-modified";a:2:{i:0;i:1325099955;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:7:"last-ip";s:13:"94.158.169.92";s:10:"published?";b:1;s:12:"commentable?";b:1;s:10:"favourite?";b:0;s:8:"visible?";b:1;s:4:"tags";a:1:{i:0;a:3:{s:4:"name";s:3:"git";s:4:"href";s:25:"http://lukashes/tags/git/";s:8:"current?";b:0;}}s:14:"comments-count";i:1;s:17:"your-comment-href";s:37:"http://lukashes/2011/11/05/1/comment/";s:16:"commentable-now?";b:1;s:19:"can-be-commentable?";b:1;s:4:"href";s:29:"http://lukashes/2011/11/05/1/";s:14:"comments-link?";b:1;s:18:"new-comments-count";i:0;s:21:"favourite-toggle-href";s:40:"http://lukashes/2011/11/05/1/@favourite/";s:9:"edit-href";s:35:"http://lukashes/2011/11/05/1/@edit/";s:1:"_";a:4:{s:3:"_id";s:1:"8";s:6:"_title";s:23:"Начинаем работать с GIT";s:4:"_ord";i:2;s:8:"_ord_max";i:4;}}i:3;a:20:{s:5:"title";s:24:"Уровни изоляции&nbsp;SQL";s:4:"text";s:6627:"Информация в данной статье по большей части справочная, чем исследовательская. Но, прежде чем говорить о теме, предлагаю немного поговорить о транзакциях.<br /><br /><b>Транзакции</b><br /><br />Все мы знаем о транзакциях, но не многие слышали о&nbsp;ASID-транзакциях. Эта аббревиатура расшифровывается как <i>Atomicity</i>, <i>Consistency</i>, <i>Isolation</i> и <i>Durability</i> (атомарность, непротиворечивость, изолированность и долговечность).<br /><br />Это тесно связанные критерии, которым должна соответствовать правильно функционирующая система транзакционной обработки:<br /><b><i>Атомарность</i></b><blockquote>Транзакция должна функционировать как единая неделимая еди-<br />ница работы таким образом, чтобы вся транзакция была либо вы-<br />полнена, либо отменена. Когда транзакции являются атомарными,<br />не существует такого понятия, как частично выполненная транзак-<br />ция: все или ничего.</blockquote><b><i>Непротиворечивость</i></b><blockquote>База данных должна всегда переходить из одного непротиворечиво-<br />го состояния в последующее. В нашем примере непротиворечивость<br />гарантирует, что сбой между третьей и четвертой строками не при-<br />ведет к исчезновению $200 с текущего счета. Поскольку транзакция<br />не будет зафиксирована, ни одно из изменений в этой транзакции не<br />будет отражено в базе данных.</blockquote><b><i>Изолированность</i></b><blockquote>Результаты транзакции обычно невидимы другим транзакциям,<br />пока она не закончена. Это гарантирует, что если в нашем примере<br />программа суммирования остатков на банковских счетах будет за-<br />пущена после третьей строки, но перед четвертой, она по-прежнему<br />увидит $200 на текущем счете. Когда мы будем обсуждать уровни<br />изоляции, вы поймете, почему мы говорим обычно невидимы.</blockquote><b><i>Долговечность</i></b><blockquote>Будучи зафиксированы, внесенные в ходе транзакции изменения<br />становятся постоянными. Это означает, что изменения должны быть<br />записаны так, чтобы данные не могли быть потеряны в случае сбоя<br />сис&#173;темы. Долговечность, однако, является несколько расплывчатой<br />концепцией, поскольку на самом деле существует много уровней.<br />Некоторые стратегии обеспечения долговечности предоставляют бо-<br />лее сильные гарантии безопасности, чем другие, и ни одна из них	<br />не является надежной на 100%.</blockquote><b>Сами уровни изоляции</b><br /><br />Изолированность&nbsp;&mdash; более сложное понятие, чем кажется на первый взгляд. Стандарт SQL определяет четыре уровня изоляции с конкретными правилами, устанавливающими, какие изменения видны внутри и вне транзакции, а какие нет. Более низкие уровни изоляции обычно допускают большую степень совместного доступа и вызывают меньше накладных расходов.<br /><br />Информация о 4х уровнях:<br /><b><i>READ UNCOMMITTED</i></b><blockquote>На уровне изоляции <i>READ UNCOMMITTED</i> транзакции могут видеть ре-<br />зультаты незафиксированных транзакций. На этом уровне вы мо-<br />жете столкнуться со множеством проблем, если не знаете абсолютно<br />точно, что делаете. Используйте этот уровень, если у вас есть на то<br />веские причины. На практике <i>READ UNCOMMITTED</i> используется редко,<br />поскольку его производительность ненамного выше, чем у других<br />уровней, имеющих множество преимуществ. Чтение незафиксиро-<br />ванных данных еще называют грязным чтением (<i>dirty read</i>).</blockquote><b><i>READ COMMITTED</i></b><blockquote>Уровнем изоляции по умолчанию для большинства&nbsp;СУБД (но не для<br />MySQL!) является <i>READ COMMITTED</i>. Он удовлетворяет вышеприведен-<br />ному простому определению изолированности: транзакция увидит<br />только те изменения, которые были уже зафиксированы другими<br />транзакциями к моменту ее начала, а произведенные ею изменения<br />останутся невидимыми для других транзакций, пока текущая тран-<br />закция не будет зафиксирована. На этом уровне возможен феномен<br />невоспроизводимого чтения (<i>nonrepeatable read</i>). Это означает, что<br />вы можете выполнить одну и ту же команду дважды и получить раз-<br />личный результат.</blockquote><b><i>REPEATABLE READ</i></b><blockquote>Уровень изоляции <i>REPEATABLE READ</i> решает проблемы, которые возни-<br />кают на уровне <i>READ UNCOMMITTED</i>. Он гарантирует, что любые строки,<br />которые считываются в контексте транзакции, будут &laquo;выглядеть<br />такими же&raquo; при последовательных операциях чтения в пределах<br />одной и той же транзакции, однако теоретически на этом уровне<br />возможен феномен фантомного чтения (<i>phantom reads</i>). Попросту<br />говоря, фантомное чтение может происходить в случае, если вы вы-<br />бираете некоторый диапазон строк, затем другая транзакция встав-<br />ляет новую строку в этот диапазон, после чего вы выбираете тот же<br />диапазон снова. В результате вы увидите новую &laquo;фантомную&raquo; стро-<br />ку. В <i>InnoDB</i> и <i>Falcon</i> проблема фантомного чтения решается с помо-<br />щью MVCC (<i>multiversion concurrency control</i>).<br /><i>REPEATABLE READ</i> является в&nbsp;MySQL уровнем изоляции транзакций по<br />умолчанию. Подсис&#173;темы хранения данных InnoDB и&nbsp;Falcon следуют<br />этому соглашению. Некоторые другие подсис&#173;темы хранения данных <br />поступают так же, но выбор остается за конкретной подсистемой.</blockquote><b><i>SERIALIZABLE</i></b><blockquote>Самый высокий уровень изоляции, <i>SERIALIZABLE</i>, решает проблему<br />фантомного чтения, заставляя транзакции выполняться в таком<br />порядке, чтобы исключить возможность конфликта. В двух словах,<br />уровень <i>SERIALIZABLE</i> блокирует каждую строку, которую транзак-<br />ция читает. На этом уровне может возникать множество задержек<br />и конфликтов при блокировках. На практике данный уровень изо-<br />ляции применяется достаточно редко, но потребности вашего при-<br />ложения могут заставить вас использовать его, согласившись с мень-<br />шей степенью совместного доступа в пользу стабильности данных.</blockquote>Подведем итог в качестве общей информации, собранной в табличке:<br /><br /><table class="e2-text-table"><tr><td>Уровень изоляции</td><td>Возможность грязного чтения</td><td>Возможность невоспроизводимого чтения</td><td>Возможность фантомного чтения</td><td>Блокировка чтения</td></tr><tr><td><i>READ UNCOMMITTED</i></td><td>+</td><td>+</td><td>+</td><td>-</td></tr><tr><td><i>READ COMMITTED</i></td><td>-</td><td>+</td><td>+</td><td>-</td></tr><tr><td><i>REPEATABLE READ</i></td><td>-</td><td>-</td><td>+</td><td>-</td></tr><tr><td><i>SERIALIZABLE</i></td><td>-</td><td>-</td><td>-</td><td>+</td></tr></td></tr></table>";s:4:"time";a:2:{i:0;i:1318353843;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:13:"last-modified";a:2:{i:0;i:1318353795;i:1;a:2:{s:6:"offset";i:14400;s:6:"is_dst";b:0;}}s:7:"last-ip";s:14:"178.49.248.132";s:10:"published?";b:1;s:12:"commentable?";b:1;s:10:"favourite?";b:0;s:8:"visible?";b:1;s:4:"tags";a:3:{i:0;a:3:{s:4:"name";s:5:"mysql";s:4:"href";s:27:"http://lukashes/tags/mysql/";s:8:"current?";b:0;}i:1;a:3:{s:4:"name";s:3:"sql";s:4:"href";s:25:"http://lukashes/tags/sql/";s:8:"current?";b:0;}i:2;a:3:{s:4:"name";s:11:"transaction";s:4:"href";s:33:"http://lukashes/tags/transaction/";s:8:"current?";b:0;}}s:14:"comments-count";i:0;s:17:"your-comment-href";s:37:"http://lukashes/2011/10/11/1/comment/";s:16:"commentable-now?";b:1;s:19:"can-be-commentable?";b:1;s:4:"href";s:29:"http://lukashes/2011/10/11/1/";s:14:"comments-link?";b:1;s:18:"new-comments-count";i:0;s:21:"favourite-toggle-href";s:40:"http://lukashes/2011/10/11/1/@favourite/";s:9:"edit-href";s:35:"http://lukashes/2011/10/11/1/@edit/";s:1:"_";a:4:{s:3:"_id";s:1:"3";s:6:"_title";s:19:"Уровни изоляции SQL";s:4:"_ord";i:3;s:8:"_ord_max";i:4;}}i:4;a:20:{s:5:"title";s:38:"Пробуем бесплатный хостинг от&nbsp;AWS";s:4:"text";s:5670:"<b>Предыстория.</b><br />Когда-то давно, когда девушки были красивее, а трава зеленее, я пользовался&nbsp;VPS от <a href="http://fastvps.ru/" linkredir="">http://fastvps.ru/</a>. Но, за некоторое время даже 3&nbsp;EUR в месяц стали надоедать. Так как процедура оплаты требовала кучу раз ввести логин/пароль. <br /><br />Потом кто-то мне посоветовал посмотреть на хостинг от <b>амазона</b>. Я всегда думал, что это очень дорого и нетривиально. Но, мне несколько раз сообщали, что есть и бесплатные сервисы. Ну что же, гугл мне в помощь. После 1 минуты поисков удалось наткнуться на ссылку <a href="http://aws.amazon.com/free/" linkredir="">http://aws.amazon.com/free/</a>. Где говорится, что в течение года можно <b>бесплатно</b> пользовать достаточно большой и интересный пакет услуг. <br /><br /><b>Фишки</b><br />Что хотелось бы выделить:<ul><li><a href="http://aws.amazon.com/ec2/" linkredir="">EC2</a>&nbsp;&mdash; это сервис, который позволяет подобрать вычислительные мощности для вашего будущего хоста.</li><li><a href="http://aws.amazon.com/ebs/" linkredir="">EBS</a>&nbsp;&mdash; что-то вроде винчестера. Можно подобрать любой размер, но в&nbsp;free-лимит попадают только 10&nbsp;Гб.</li><li><a href="http://aws.amazon.com/s3/" linkredir="">S3</a>&nbsp;&mdash; файловое хранилище, которое не горит, не тонет и от молний не должно умирать. Неплохой сервис для файлообмена.</li></ul><b>Начало</b><br />После прохождения пятиминутной регистрации (<i>необходимо отметить, что для регистрации нужна рабочая карточка&nbsp;VISA/MasterCard, в моем слючае идеально подошла виртуальная карта от&nbsp;AlfaBank&rsquo;a</i>) можно переходить в <a href="http://aws.amazon.com/console/" linkredir="">консоль</a>, откуда осуществляется все управление облачными ресурсами амазона.<br />И сейчас необходимо привести небольшой голоссарий, в этом мне поможет цитата с <a href="http://habrahabr.ru" linkredir="">Хабра</a>:<blockquote>Instances — это ваша стойка с серверами. AMIs — настроенные образы серверов, которые можно установить в вашем датацентре. Volumes — винты, которые можно вставить в любой из серверов. Snapshots — резервные копии винтов. Security Groups — файрволы, за каждым из которых можно прятать один или несколько серверов.</blockquote>Начать необходимо с выбора зоны, в которой будет находиться ваше облако. В моем случае выбор пал на Европу <s>не люблю я Америку</s>. Потом необходимо создать собственный <i>Инстанс</i>. Для этого переходим на соответствующую вкладку и жмем на единственно-доступную кнопку &laquo;Launch Instance&raquo;. Появляется небольшое окно с несколькими вкладками, нас интересует &laquo;My AIMs&raquo; и в селекторе фильтра &laquo;просим&raquo; показать free-версии. В своем случае я выбрал Ubuntu, как наиболее удобный для тестирования (дома тоже стоит убунта). На следующем шаге необходимо под лэйбл &laquo;Instance Type&raquo; подставить &laquo;Micro 613 mb&raquo;, так как наша цель&nbsp;&mdash; получить бесплатное облако. Далее идет список настроек, который каждый должен определить для себя сам. Доходим до шага &laquo;CREATE KEY PAIR&raquo;&nbsp;&mdash; там нам потребуется создать новый ключ. Его имя может быть совершенно спонтанным, ровно как и желание идти в клуб после поллитра водочки. Потом нажимаем на кнопку &laquo;Create &amp; Download your Key Pair&raquo; и&nbsp;pem-ключик просится сохраниться на вашей машине. Так как я работаю под&nbsp;Ubuntu, ключик я сохранил в директории ~/.ssh/. К ключу мы еще вернемся, остался последний важный шаг&nbsp;&mdash; настройка&nbsp;firewall. Необходимо сделать открытыми порты 22 и 80 для&nbsp;ssh- и&nbsp;http-запросов соответственно.<br />В моем случае был автоматически создан EBS Volume c 10 гб. разделом, он был автоматически привязан к моему <i>Инстансу</i>.<br /><br />Считаю необходимым еще рассказать о&nbsp;Elastic IP&nbsp;&mdash; можно сразу создать статический IP для только что созданного <i>Инстанса</i> и связать их. Если Вы создадите IP, но не привяжете к Инстансу или Инстанс в какой-то момент будет выключен, то с Вас будут снимать деньги за неиспользование зарезервированного IP. Такие меры приняты, чтобы не висели свободные IP-адреса без дела. На полученный IP адрес можно сразу прописать необходимые DNS MX-записи.<br /><br /><b>Подключаемся по&nbsp;SSH</b><br />Так как я работаю под <i>Ubuntu</i> опишу процедуру подключения на этой операционной системе. Для того чтобы узнать по какому&nbsp;URL-у подключаться нужно вернуться на страницу со статусом запущенного <i>Инстанса</i> и в расположенном в верху селекторе &laquo;Instance Actions&raquo; выбрать &laquo;Connect&raquo;. На экране появится окно, которое предложит подключиться приблизительно таким образом:<blockquote>ssh -i MyAmazonKeyPair.pem root@46.137.161.110</blockquote>Где, параметру -i передается адрес ключа, который Вы сохранили при создании <i>Инстанса</i>. Для упрощения процедуры коннекта, можно создать файлик (или дописать в него, если он уже сужествует) ~/.ssh/config со следующим содержимым:<blockquote>Host &lt;host_name&gt;<br /> StrictHostKeyChecking no<br /> User &lt;user_name&gt;<br /> IdentityFile &lt;pem_file_path&gt;</blockquote>В моем случае, это выглядит так:<blockquote>Host lukashes.ru<br /> StrictHostKeyChecking no<br /> User root<br /> IdentityFile /home/yegor/.ssh/MyAmazonKeyPair.pem</blockquote>Теперь мы можем подключиться к нашему облаку введя в командную строчку &laquo;ssh root@lukashes.ru&raquo;, соответственно, подставить необходимо ваше имя пользователя и хост, который вы получили с помощью &laquo;Connect&raquo;.<br /><br />На первый взгляд, Амазон достаточно сложен в настройке, зато он абсолютно универсален, как и&nbsp;linux. Удачи в экспериментах.";s:4:"time";a:2:{i:0;i:1317029268;i:1;a:2:{s:6:"offset";i:25200;s:6:"is_dst";b:0;}}s:13:"last-modified";a:2:{i:0;i:1317053433;i:1;a:2:{s:6:"offset";i:25200;s:6:"is_dst";b:0;}}s:7:"last-ip";s:14:"178.49.248.132";s:10:"published?";b:1;s:12:"commentable?";b:1;s:10:"favourite?";b:0;s:8:"visible?";b:1;s:4:"tags";a:5:{i:0;a:3:{s:4:"name";s:6:"amazon";s:4:"href";s:28:"http://lukashes/tags/amazon/";s:8:"current?";b:0;}i:1;a:3:{s:4:"name";s:3:"aws";s:4:"href";s:25:"http://lukashes/tags/aws/";s:8:"current?";b:0;}i:2;a:3:{s:4:"name";s:6:"clouds";s:4:"href";s:28:"http://lukashes/tags/clouds/";s:8:"current?";b:0;}i:3;a:3:{s:4:"name";s:12:"free hosting";s:4:"href";s:34:"http://lukashes/tags/free-hosting/";s:8:"current?";b:0;}i:4;a:3:{s:4:"name";s:3:"ssh";s:4:"href";s:25:"http://lukashes/tags/ssh/";s:8:"current?";b:0;}}s:14:"comments-count";i:1;s:17:"your-comment-href";s:37:"http://lukashes/2011/09/26/1/comment/";s:16:"commentable-now?";b:1;s:19:"can-be-commentable?";b:1;s:4:"href";s:29:"http://lukashes/2011/09/26/1/";s:14:"comments-link?";b:1;s:18:"new-comments-count";i:0;s:21:"favourite-toggle-href";s:40:"http://lukashes/2011/09/26/1/@favourite/";s:9:"edit-href";s:35:"http://lukashes/2011/09/26/1/@edit/";s:1:"_";a:4:{s:3:"_id";s:1:"1";s:6:"_title";s:33:"Пробуем бесплатный хостинг от AWS";s:4:"_ord";i:4;s:8:"_ord_max";i:4;}}}